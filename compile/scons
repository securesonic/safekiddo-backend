#! /usr/bin/env python
#
# SCons - a Software Constructor
#
# Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 The SCons Foundation
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

__revision__ = "src/script/scons.py 5357 2011/09/09 21:31:03 bdeegan"

__version__ = "2.1.0"

__build__ = "r5357[MODIFIED]"

__buildsys__ = "ubuntu"

__date__ = "2011/09/09 21:31:03"

__developer__ = "bdeegan"

import os
import sys

# Check to see if the python version is > 3.0 which is currently unsupported
# If so exit with error message
try:
    if  sys.version_info >= (3,0,0):
        msg = "scons: *** SCons version %s does not run under Python version %s.\n\
Python 3.0 and later are not yet supported.\n"
        sys.stderr.write(msg % (__version__, sys.version.split()[0]))
        sys.exit(1)
except AttributeError:
    # Pre-1.6 Python has no sys.version_info
    # No need to check version as we then know the version is < 3.0.0 and supported
    pass

if __name__ == "__main__":
    libs = [ os.path.join(os.path.dirname(__file__), "scons-%s" % __version__) ]
    sys.path = libs + sys.path
    # this does all the work, and calls sys.exit
    # with the proper exit status when done.
    print "PLATFORM:", sys.platform
    try:
	# remove dblite to force recompilation in order to avoid using wrong binaries after checkout of different branch
	# .sconsign.dblite - old branches
	# .sconsign.dblite.OST - new branches
	# Consider scenario:
	# - old branch checked out; sources compiled
	# - new branch checked out => remove old db and new db as binaries might be for wrong version
	# Consider scenario:
	# - new branch checked out; sources compiled
	# - old branch checked out => no old db, error is caught
	os.unlink('.sconsign.dblite')
	os.unlink('.sconsign.dblite.OST')
    except OSError:
	pass
    import SCons.Script
    import safeKiddoWrapper
    safeKiddoWrapper.setupFunctions()
    SCons.Script.main()
